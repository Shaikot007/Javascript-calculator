{"version":3,"sources":["serviceWorker.js","index.js","Javascript-calculator.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","Calculator","props","handleChange","event","test","state","inputValue","setState","slice","target","value","includes","replace","handleZero","handleDecimal","handleOperator","handleClear","handleCalculate","eval","className","id","this","size","color","onClick","href","rel","React","Component"],"mappings":"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","file":"static/js/main.70df9934.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Javascript-calculator';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './Javascript-calculator.scss';\nimport { Button } from 'reactstrap';\n \nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"0\",\n    };\n  }\n  // For input numbers\n  handleChange = (event) => {\n    if ((/([^.0-9]0)$/).test(this.state.inputValue) === true) {\n      this.setState( {\n        inputValue: this.state.inputValue.slice(0, -1) + event.target.value\n      });\n    }\n    else if (this.state.inputValue.includes(\".\") === true) {\n      this.setState({\n        inputValue: (this.state.inputValue + event.target.value).replace(/^0+/, '0')\n      });\n    }\n    else {\n      this.setState({\n        inputValue: (this.state.inputValue + event.target.value).replace(/^0+/, '')\n      });\n    }\n  }\n  // For input zero\n  handleZero = (event) => {\n    if ((/([^.0-9]0)$/).test(this.state.inputValue) === true) {\n      this.setState( {\n        inputValue: (this.state.inputValue + event.target.value).slice(0, -1)\n      });\n    }\n    else {\n      this.setState({\n        inputValue: (this.state.inputValue + event.target.value).replace(/^0+/, '0')\n      });\n    }\n  }\n  // For input decimal\n  handleDecimal = (event) => {\n    const value = event.target.value;\n    if (this.state.inputValue.match(/(-?\\d?\\.?\\d*)$/)[0].includes(\".\") === false) {\n      this.setState((state) => {\n        return {\n          inputValue: state.inputValue + value\n        }\n      });\n    }\n    if (this.state.inputValue.match(/(-?\\d?\\.?\\d*)$/)[0].includes(\".\") === false && (/[*+-/]$/).test(this.state.inputValue) === true && value === \".\") {\n      this.setState((state) => {\n        return {\n          inputValue: state.inputValue.slice(0, -1) + \"0\" + value\n        }\n      });\n    }\n  }\n  // For input operators\n  handleOperator = (event) => {\n    const value = event.target.value;\n    if ((/^[+*/]/).test(this.state.inputValue) === true) {\n      this.setState((state) => {\n        return {\n          inputValue: state.inputValue.slice(1) + value\n        }\n      });\n    }\n    else if ((/[\\.]$/).test(this.state.inputValue) === true) {\n      this.setState((state) => {\n        return {\n          inputValue: state.inputValue + \"0\" + value \n        }\n      });\n    }\n    else if ((/[*+-/]$/).test(this.state.inputValue) === false) {\n      this.setState({\n        inputValue: this.state.inputValue + value\n      });\n    }\n    else if ((/[*+/]$/).test(this.state.inputValue) === true && value !== \"-\") {\n      this.setState((state) => {\n        return {\n          inputValue: state.inputValue.slice(0, -1) + value\n        }\n      });\n    }\n    else if ((/[*+/]$/).test(this.state.inputValue) === true && value === \"-\") {\n      this.setState((state) => {\n        return {\n          inputValue: state.inputValue + value\n        }\n      });\n    }\n    else if (value !== \"-\") {\n      this.setState((state) => {\n        return {\n          inputValue: state.inputValue.slice(0, -2) + value\n        }\n      });\n    }\n  }\n  // For input value clear\n  handleClear = () => {\n    this.setState({\n      inputValue: \"0\",\n    });\n  }\n  // For input value calculation\n  handleCalculate = () => {\n    if ((/[*+-/]$/).test(this.state.inputValue) === true) {\n      this.setState( {\n        inputValue: eval(this.state.inputValue.slice(0, -1))\n      });\n    }\n    else {\n      this.setState( {\n        inputValue: eval(this.state.inputValue)\n      });\n    }\n  }\n  render() {\n    return (\n      <div className=\"Javascript-calculator\">\n        <div className=\"Calculator-frame\">\n          <div id=\"display\">\n            {this.state.inputValue}\n          </div>\n          <div className=\"Buttons\">\n            <Button id=\"clear\" size=\"lg\" color=\"danger\" onClick={this.handleClear}>AC</Button>\n            <Button id=\"divide\" size=\"lg\" color=\"info\" value=\"/\" onClick={this.handleOperator}>&divide;</Button>\n            <Button id=\"multiply\" size=\"lg\" color=\"info\" value=\"*\" onClick={this.handleOperator}>&times;</Button>\n            <Button id=\"seven\" size=\"lg\" color=\"secondary\" value=\"7\" onClick={this.handleChange}>7</Button>\n            <Button id=\"eight\" size=\"lg\" color=\"secondary\" value=\"8\" onClick={this.handleChange}>8</Button>\n            <Button id=\"nine\" size=\"lg\" color=\"secondary\" value=\"9\" onClick={this.handleChange}>9</Button>\n            <Button id=\"subtract\" size=\"lg\" color=\"info\" value=\"-\" onClick={this.handleOperator}>-</Button>\n            <Button id=\"four\" size=\"lg\" color=\"secondary\" value=\"4\" onClick={this.handleChange}>4</Button>\n            <Button id=\"five\" size=\"lg\" color=\"secondary\" value=\"5\" onClick={this.handleChange}>5</Button>\n            <Button id=\"six\" size=\"lg\" color=\"secondary\" value=\"6\" onClick={this.handleChange}>6</Button>\n            <Button id=\"add\" size=\"lg\" color=\"info\" value=\"+\" onClick={this.handleOperator}>+</Button>\n            <Button id=\"one\" size=\"lg\" color=\"secondary\" value=\"1\" onClick={this.handleChange}>1</Button>\n            <Button id=\"two\" size=\"lg\" color=\"secondary\" value=\"2\" onClick={this.handleChange}>2</Button>\n            <Button id=\"three\" size=\"lg\" color=\"secondary\" value=\"3\" onClick={this.handleChange}>3</Button>\n            <Button id=\"equals\" size=\"lg\" color=\"warning\" value=\"=\" onClick={this.handleCalculate}>=</Button>\n            <Button id=\"zero\" size=\"lg\" color=\"secondary\" value=\"0\" onClick={this.handleZero}>0</Button>\n            <Button id=\"decimal\" size=\"lg\" color=\"secondary\" value=\".\" onClick={this.handleDecimal}>.</Button>\n          </div>\n        </div>\n        <footer>\n          <p>Made by <a href=\"https://github.com/Shaikot007\" target=\"_blank\" rel=\"noopener noreferrer\">Shaikot</a></p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;"],"sourceRoot":""}